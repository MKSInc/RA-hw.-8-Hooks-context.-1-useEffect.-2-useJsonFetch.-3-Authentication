{"version":3,"sources":["components/Profiles/LoadResources/LoadResources.js","components/Profiles/ProfilesContext/ProfilesContext.js","components/Profiles/utils/getAvatarUrl.js","components/Profiles/hooks/useFetch.js","components/Profiles/ProfilesList/ProfilesList.js","components/Profiles/ProfilesDetails/ProfilesDetails.js","components/Profiles/index.js","components/Profiles/Profiles.js","components/JsonFetch/hooks/useJsonFetch.js","components/JsonFetch/JsonFetch.js","components/JsonFetch/index.js","App.js","index.js"],"names":["LoadResources","setIsSrcLaded","useState","isMount","setIsMount","setTimeout","className","ProfilesContext","React","createContext","getAvatarUrl","url","imgUrl","URL","imgSize","Math","floor","random","pathname","href","useFetch","initialData","dataName","setIsLoading","useContext","data","setData","fetchController","AbortController","useEffect","fetchData","a","prevValue","fetch","process","signal","response","ok","Error","status","json","avatar","console","log","message","name","ProfilesList","handleOnItemClick","selectedID","isLoading","list","setListItemClasses","item","classes","id","push","details","join","map","onClick","ProfilesDetails","abort","src","alt","city","company","position","Profiles","setSelectedID","isSrcLoaded","Provider","value","useJsonFetch","opts","error","setError","loading","setLoading","statusText","Success","Loading","JsonFetch","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb18392a.chunk.js","sourcesContent":["import { useState } from 'react';\n\n/**\n * Компонент предназначен для загрузки svg иконок, которые показываются во время выполнения запросов.\n * Так как на загрузку иконок тоже нужно время, то они появляются с опозданием в случае первого запроса,\n * на дальнейших запросах они отображаются как надо. Поэтому, что бы при первом использовании они появлялись сразу,\n * приходится подгружать их заранее.\n * @returns \n */\n\nexport default function LoadResources({ setIsSrcLaded }) {\n  const [isMount, setIsMount] = useState(true);\n\n  setTimeout(() => {\n    setIsSrcLaded(true);\n    setIsMount(false);\n  }, 1);\n  \n\n  if (isMount) return (\n    <>\n      <div className={'profiles__loading profiles__loading-list _visually-hidden'}></div>\n      <div className={'profiles__loading profiles__loading-details _visually-hidden'}></div>\n    </>\n  )\n  \n  return null;\n}\n","import React from 'react';\n\nconst ProfilesContext = React.createContext();\n\nexport default ProfilesContext;","/* Функция для корректировки ссылки на аватар, чтобы приходили разные картинки.\n   Для этого нужно менять в ссылке размер картинки. */\n\nexport default function getAvatarUrl(url) {\n  const imgUrl = new URL(url);\n  // Определяем случайный размер в диапазоне 280 - 320.\n  const imgSize = Math.floor(Math.random() * (320 - 280)) + 280;\n  imgUrl.pathname = imgSize;\n  return imgUrl.href;\n}\n","import { useState, useEffect, useContext } from 'react';\nimport ProfilesContext from '../ProfilesContext/ProfilesContext';\nimport getAvatarUrl from '../utils/getAvatarUrl';\n\n/**\n * Хук useFetch выполняет запрос на переданный url и возвращает полученные данные.\n * dataName - указывает для каких данных показывать и скрывать иконку загрузки.\n * Также возвращает fetchController, с помощью которого можно прервать запрос,\n * если пользователь выбрал другой профиль. Для использования нужно вызвать\n * fetchController.abort() в useEffect хуке того компонента, где вызывается и сам useFetch.\n * Таким образом useEffect среагирует на смену id профиля и вызовет fetchController.abort()\n * @returns \n */\n\nexport default function useFetch({ url, initialData, dataName }) {\n  const { setIsLoading } = useContext(ProfilesContext);\n  const [data, setData] = useState(initialData);\n  const fetchController = new AbortController();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Показываем значек загрузки.\n      setIsLoading((prevValue) => ({...prevValue, [dataName]: true}));\n\n      try {\n        const response = await fetch(process.env.REACT_APP_PROFILES_DATA_URL + url, { signal: fetchController.signal });\n        if (!response.ok) throw new Error(`${response.url} ${response.status}`);\n        const data = await response.json();\n        if (data.avatar) data.avatar = getAvatarUrl(data.avatar);\n        setData(data);\n        // Убираем значек загрузки.\n        setIsLoading((prevValue) => ({...prevValue, [dataName]: false}));\n\n      } catch(error) {\n          console.log('⛔', error.message);\n          // Убираем значек загрузки только в случае, если ошибка не была вызванна прерыванием запроса.\n          // Та же ситуациия, если убирать значек при любом исходе ниже.\n          if (error.name !== 'AbortError') {\n            setIsLoading((prevValue) => ({...prevValue, [dataName]: false}));\n          }\n      }\n\n      // Если убирать значек загрузки при любом исходе, то в ситуации, когда пользователь прерывает запрос,\n      // выбирая другой профиль, этот сброс значка от прерванного запроса сработает после начала нового запроса\n      // и тем самым уберет значек загрузки для нового профиля.\n      // setIsLoading((prevValue) => ({...prevValue, [dataName]: false}));\n    }\n    \n    fetchData();\n\n    // Вариант обработки запроса через then-catch, на который react ругается и просит переделать\n    // через async-await.\n    /*\n    fetch(process.env.REACT_APP_PROFILES_DATA_URL + url, { signal: fetchController.signal })\n      .then((response) => {\n        if (!response.ok) throw new Error(`${response.url} ${response.status}`);\n        return response.json();\n      })\n      .then((data) => {\n        setData(data);\n        setIsLoading((prevValue) => ({...prevValue, [dataName]: false}));\n      })\n      .catch((error) => {\n        console.error('⛔', error.message);\n        // Убираем значек загрузки только в случае, если ошибка не была вызванна прерыванием запроса.\n        // Та же ситуациия, что и с блоком finally.\n        if (error.name !== 'AbortError') {\n          setIsLoading((prevValue) => ({...prevValue, [dataName]: false}));\n        }\n      })\n      .finally(() => {\n        // Если убирать значек загрузки в finally, то в ситуации, когда пользователь прерывает запрос,\n        // выбирая другой профиль, finally от прерванного запроса сработает после начала нового запроса\n        // и тем самым уберет значек загрузки для нового профиля.\n        // setIsLoading((prevValue) => ({...prevValue, [dataName]: false}));\n      });*/\n\n  }, [url]);\n\n  return [{ data, fetchController }];\n}\n","import useFetch from '../hooks/useFetch';\n\nfunction ProfilesList({ handleOnItemClick, selectedID, isLoading }) {\n  const [{ data: list }] = useFetch({\n    url: 'users.json',\n    initialData: [],\n    dataName: 'list',\n  });\n\n  const setListItemClasses = (item) => {\n    const classes = [];\n    if (item.id === selectedID) classes.push('profiles__selected');\n    if (isLoading.details) classes.push('profiles__loading', 'profiles__loading-details');\n\n    return classes.join(' ');\n  }\n\n  return (\n    <div className={'profiles__item'}>\n      <ul className={'profiles__list'}>\n        {isLoading.list ?\n        <li\n          className={'profiles__loading profiles__loading-list'}>\n          <div className={'profiles__text'}>Loading...</div>\n        </li>\n        : null}   \n        {list.map((item) => \n          <li \n            key={item.id}\n            className={`${setListItemClasses(item)}`}\n            onClick={() => handleOnItemClick(item)}>\n            <button className={'profiles__text'}>{item.name}</button>\n          </li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default ProfilesList;\n","import { useEffect } from 'react';\nimport useFetch from '../hooks/useFetch';\n\nfunction ProfilesDetails({ selectedID }) {\n  const [{ data, fetchController }] = useFetch({\n    url: `${selectedID}.json`,\n    initialData: null,\n    dataName: 'details',\n  });\n\n  useEffect(() => {\n    return () => fetchController.abort()\n  }, [selectedID]);\n\n  if (data === null) return null;\n\n  return (\n    <div className={'profiles__details details-profiles'}>\n      <ul className={'profiles__list'}>\n        <li>\n          <div className={'profiles__img'}>\n            <img src={data.avatar} alt={'user'}/>\n          </div>\n        </li>\n        <li><div className={'profiles__text propfiles__name'}>{data.name}</div></li>\n        <li><div className={'profiles__text'}>City: {data.details.city}</div></li>\n        <li><div className={'profiles__text'}>Company: {data.details.company}</div></li>\n        <li><div className={'profiles__text'}>Position: {data.details.position}</div></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default ProfilesDetails;\n","import Profiles from './Profiles';\n\nexport default Profiles;","import { useState } from 'react';\nimport LoadResources from './LoadResources/LoadResources';\nimport ProfilesList from './ProfilesList/ProfilesList';\nimport ProfilesDetails from './ProfilesDetails/ProfilesDetails';\nimport ProfilesContext from './ProfilesContext/ProfilesContext';\nimport './profiles.css';\n\nexport default function Profiles() {\n  const [selectedID, setSelectedID] = useState(null);\n  const [isLoading, setIsLoading] = useState({\n    list: false,\n    details: false,\n  });\n\n  const [isSrcLoaded, setIsSrcLaded] = useState(false);\n\n  const handleOnItemClick = (item) => {\n    setSelectedID(item.id);\n  }\n\n  return (\n    <ProfilesContext.Provider value={{setIsLoading}}>\n      <div className={'profiles'}>\n        {isSrcLoaded ? null: <LoadResources setIsSrcLaded={setIsSrcLaded}/>}\n        <div className={'profiles__column-1'}>\n          <ProfilesList handleOnItemClick={handleOnItemClick} selectedID={selectedID} isLoading={isLoading} />\n        </div>\n\n        <div className={'profiles__column-2'}>\n          {selectedID !== null ? <ProfilesDetails selectedID={selectedID} />: null}\n        </div>\n      </div>\n    </ProfilesContext.Provider>\n  )\n}\n","import { useState, useEffect } from 'react';\n\nfunction useJsonFetch(url, opts) {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(url, opts);\n        if (!response.ok) throw new Error(`${response.url} ${response.status} ${response.statusText}`);\n        const data = await response.json();\n        setData(data);\n\n      } catch (error) {\n        setError(error.message);\n      }\n      setLoading(false);\n    }\n\n    fetchData();\n\n  }, [url]);\n\n  return [{ data, error, loading }];\n\n}\n\nexport default useJsonFetch;","import useJsonFetch from './hooks/useJsonFetch';\nimport './jsonfetch.css';\n\nfunction Success () {\n  const [{ data }] = useJsonFetch('https://ra-8-2-usejsonfetch.herokuapp.com/data');\n\n  return (\n    <div className={'success'}>\n      <div className={'jsonfetch__title'}>Успешное получение данных</div>\n      <div className={'jsonfetch__text'}>Data: {data !== null ? data.status : ''}</div>\n    </div>\n  )\n}\n\nfunction Error () {\n  const [{ error }] = useJsonFetch('https://ra-8-2-usejsonfetch.herokuapp.com/error');\n\n  return (\n    <div className={'error'}>\n      <div className={'jsonfetch__title'}>Получение 500 ошибки</div>\n      <div className={'jsonfetch__text jsonfetch__error'}>Error: {error !== null ? error : ''}</div>\n    </div>\n  )\n}\n\nfunction Loading () {\n  const [{ loading }] = useJsonFetch('https://ra-8-2-usejsonfetch.herokuapp.com/loading');\n\n  return (\n    <div className={'loading'}>\n      <div className={'jsonfetch__title'}>Индикатор загрузки (5 сек)</div>\n      {loading ? \n        <div className={'jsonfetch__loading'}>Загрузка...</div>\n        : null\n      }\n    </div>\n  )\n}\n\nexport default function JsonFetch() {\n  return (\n    <div className={'jsonfetch'}>\n      <Success />\n      <Error />\n      <Loading />\n    </div>\n  )\n}\n","import JsonFetch from './JsonFetch';\n\nexport default JsonFetch;","import Profiles from './components/Profiles';\nimport JsonFetch from './components/JsonFetch/';\n\nexport default function App() {\n\treturn (\n\t\t<div className={'wrapper'}>\n\t\t\t<header className={'header'} id={'header'}>\n\t\t\t\t<div className={'header__body _container'}>\n\t\t\t\t\t<div className={'header__title'}>8. Домашнее задание к лекции «Hooks, Context API»</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\n\t\t\t<main className={'main'}>\n\t\t\t\t<div className={'main__item task _container'} id={'task1'}>\n\t\t\t\t\t<header className={'task__header'}>\n\t\t\t\t\t\t<div className={'task__title'}>8.1. useEffect (Список и детали)</div>\n\t\t\t\t\t\t<nav className={'task__menu menu'}>\n\t\t\t\t\t\t\t<div className={'menu__item'}>\n\t\t\t\t\t\t\t\t<a className={'menu__link menu__link-bottom'} href={'#task2'}>\n\t\t\t\t\t\t\t\t\t<span className={'_visually-hidden'}>next task</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div className={'task__body'}>\n\t\t\t\t\t\t{/* Компонент задачи 1. */}\n\t\t\t\t\t\t<Profiles />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={'main__item task _container'} id={'task2'}>\n\t\t\t\t\t<header className={'task__header'}>\n\t\t\t\t\t\t<div className={'task__title'}>8.2. useJsonFetch</div>\n\t\t\t\t\t\t<nav className={'task__menu menu'}>\n\t\t\t\t\t\t\t<div className={'menu__item'}>\n\t\t\t\t\t\t\t\t<a className={'menu__link menu__link-top'} href={'#header'}>\n\t\t\t\t\t\t\t\t\t<span className={'_visually-hidden'}>previous task</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={'menu__item'}>\n\t\t\t\t\t\t\t\t<a className={'menu__link menu__link-bottom'} href={'#task3'}>\n\t\t\t\t\t\t\t\t\t<span className={'_visually-hidden'}>next task</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div className={'task__body'}>\n\t\t\t\t\t\t{/* Компонент задачи 2. */}\n\t\t\t\t\t\t<JsonFetch />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={'main__item task _container'} id={'task3'}>\n\t\t\t\t\t<header className={'task__header'}>\n\t\t\t\t\t\t<div className={'task__title'}>8.3. Authentication*</div>\n\t\t\t\t\t\t<nav className={'task__menu menu'}>\n\t\t\t\t\t\t\t<div className={'menu__item'}>\n\t\t\t\t\t\t\t\t<a className={'menu__link menu__link-top'} href={'#task2'}>\n\t\t\t\t\t\t\t\t\t<span className={'_visually-hidden'}>previous task</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div className={'task__body'}>\n\t\t\t\t\t\t{/* Компонент задачи 3. */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/styles.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}